name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  linter:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: npm install
        run: cd api && npm install && cd ../app && npm install
      - name: lint
        run: cd api && npm run eslint && cd ../app && npm run eslint
      - name: build
        run: cd api && npm run build
  test_and_deploy:
    runs-on: ubuntu-20.04
    env:
      MYSQL_DEVELOPMENT_USER: root
      MYSQL_DEVELOPMENT_PASSWORD: ${{ secrets.ROOTPASSWORD }}
      MYSQL_DEVELOPMENT_HOST: 127.0.0.1
      MYSQL_DEVELOPMENT_DATABASE: test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: npm install
        run: npm run prepare
      - uses: shogo82148/actions-setup-mysql@v1
        with:
          mysql-version: '8.0'
          root-password: ${{ secrets.ROOTPASSWORD }}
      - name: Create Db
        run: mysql -u${{ env.MYSQL_DEVELOPMENT_USER }} -p${{ secrets.ROOTPASSWORD }} -h${{ env.MYSQL_DEVELOPMENT_HOST }} -e 'CREATE DATABASE IF NOT EXISTS ${{ env.MYSQL_DEVELOPMENT_DATABASE }};'
      - name: api testing
        run: cd api && npm run test
      - name: app testing
        run: cd app && npm run test
      - name: Heroku deploy
        if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message,'#skip') }}
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP }}
          heroku_email: ${{ secrets.HEROKU_API_EMAIL }}
          healthcheck: "https://${{secrets.HEROKU_APP}}.herokuapp.com/health"
          rollbackonhealthcheckfailed: true
  tag_release:
    if: ${{ github.event_name != 'pull_request' && contains(github.event.head_commit.message,'#tag') }}
    needs: [test_and_deploy]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'
    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.36.0
      env:
        DEFAULT_BUMP: "#patch"
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}